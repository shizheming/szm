数字的.运算符需要给予特别的注意，因为他是一个有效的数字字符，会优先识别为数字常量的一部分，然后才是对象属性访问运算符。
42.toFixed(3)//无效语法
(42).toFixed(3);
0.42.toFixed(3);
42..toFixed(3);
判断2个数是否相等（主要是小数，会有个差值）
if (!Number.EPSILON) {
	Number.EPSILON = Math.pow(2, -52);
}
function numbersCloseEnoughToEqual (n1, n2) {
	return Math.abs(n1 - n2) < Number.EPSILON;
}
var a = 0.1 + 0.2;
var b = 0.3;
numbersCloseEnoughToEqual(a, b)//true
检测一个值是否是整数，用es6中的Number.isInteger()，或是
function num (num) {
	return typeof num == 'number' && num % 1 === 0;
}
检测一个值是否是安全的整数，可以用es6的Number.isSafeInteger()。
判断一个值是不是NaN，我们可以用es6的Number.isNaN()，或是
function isn (n) {
	return typeof n === 'number' && isNaN(n);
}
NaN是javascript中唯一一个不等于自身的值。