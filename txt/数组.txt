把length设小将导致所有下标大于等于新length的属性被删除。
delete可以删除数组中的元素但是会留下位置，对象当中的delete却不会。
我们还可以使用splice来删除元素，这样就不会保留位置了。
如果字符串键值能够被强制类型转换为十进制数字的话，他就会被当作数字索引来处理。
var a = [];
a['100'] = 1;
console.log(a.length);//101
把目标变成数组
var str = 'asdfasdf---fdg---123-4-&*h23&^$%$^%!';
var obj = {
	a : 1,
	b : 2,
	c : 3
};
var nub = 123123123;
var fn = function () {
	return [123];
};
var arr = Array.prototype.slice.call(str);
console.log(arr);
console.log(Array.from(obj));
只有类数组和字符串能借用数组的方法直接变成数组，其他数据类型不行，Array.from是es6的新方法
创建数组的时候可以把new省略掉的直接Array()。
关联数组和索引数组
在javascript中，关联数组其实是实现对象系统的基础，也就是说，早在array类型之前，系统已经为object类型实现好了关联数组，而array只是这种特性的一种应用罢了。所以javascript中的索引数组，只是数字的形式，内部仍然是字符串的形式来存取的一个关联数组。由于这一特性上他与普通对象没有任何区别，因此你完全可以用in运算符，或是for in语句来考察他的成员。
javascript的索引数组的连续性，只是一种表现效果，因为数组只遵循对象系统所约定的“访问不存在的对象成员的值为undefined”就自然具有上面的效果，因此我们说这只是一种“表现效果”。