前端本来就只有两个趋势，
一个是往设计靠拢，
包括用户的各种体验设计 什么视觉体验 操作体验 什么什么心理学 然后包括动画设计制作 等等等等，
技能方面主要是会使用各种编辑软件，
说白了就是一个负责炫酷的角色。

另一方向就是往服务端方面发展，
NodeJs就是一个不错的入口，
当然很多前端也会用PHP作为第一学习的服务端语言。

这个趋势从来没有变过，将来也不会变，但就个体而言，

做全栈的话就属于什么都懂却什么都不精的阶层，
做一些小私活 或者 往产品经理 技术部经理这个级别走还可以，
要真的当一个职位做，那一个人玩不过来。

--------------------
app
---------------------
用户管理系统
操作界面
数据交互



--------------------------------------------------
我从毕业开始工作到现在每个阶段的想法和目标

刚开始做美工的时候我想成为牛逼的网页设计师，然后去了远大我想成为牛逼的前端工程师，虽然这个大方向到先在没变（我也不希望变），但是前端的小方向一直在变，css就不谈了，只要谈谈js，一开始js的动画效果非常吸引我，所以我想向动画效果那方面发展，后来发现写效果是js中最难的，牵扯到很多各方面的知识，像运动学，物理学，数学，所有就淡化了，接着去了任我花后，数据交互做的比较多，慢慢转变成想做纯粹的跟数据打交道了，我又想往纯数据交互那方面发展了，看了很多数据结构和算法的书以后就觉得，这个东西掌握个基础就行了，算法这种我根本算不过别人，而且已经有大量成功的案例了，知道一下就好，不需要深究，之后不知不觉从这种想做具象的效果啊，数据啊，变成编程范式了，当然那是做效果的时候写过一段时间的面向对象，那时挺专面向对象的，而现在变成函数式的编程范式了，至少自己到现在都不太喜欢js面向对象的写法，满别扭的。从pc到移动再到现在有点倾向的cms，总结下来这样，不管做什么抓住最核心的就好了，核心是这门语言的特点（javascript是一门解释型语言，弱类型，函数式，动态的，面向对象的语言），而不是他能干什么，他演变之后能干什么，他的第一形（函数），编程的范式，组件化，模块化的思想，设计的原则，最终的目的具象化的体现出来的话就是，组件，插件的体现。我要学会怎么写，之后要熟练的写，就是一个组织拼装的过程和想法。








































1.先把我的函数库给建立起来，以后一直要在项目里用啊--基于underscore
2.再把自己用到的常用效果整理下
3.接着就是要开始整理到现在做过的页面了，把里面的新写的函数和效果提炼出来
4.项目中常用到的效果，自己没写过的，以后也要用到的，自己搞一个
5.全部整理完了再去看书，每次迭代完了都这样搞下