{
  // Place your snippets for vue here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Print to console": {
    "prefix": "detailModal",
    "body": [
      "<template>",
      "<a-modal :visible=\"props.visible\" title=\"title\" @cancel=\"cancel\">",
      "<template #footer>",
      " <a-button type=\"primary\" @click=\"okButtonClick\">确定</a-button>",
      "</template>",
      " <a-descriptions>",
      "<a-descriptions-item label=\"label\">label</a-descriptions-item>",
      " <a-descriptions-item label=\"label\">label</a-descriptions-item>",
      "<a-descriptions-item label=\"label\">label</a-descriptions-item>",
      "<a-descriptions-item label=\"label\">label</a-descriptions-item>",
      "</a-descriptions>",
      "</a-modal>",
      "</template>",
      "<script setup>",
      "const props = defineProps([\"visible\"]);",
      "const emits = defineEmits([\"update:visible\"]);",
      "const okButtonClick = () => {",
      "emits(\"update:visible\", false);",
      "};",
      "const cancel = () => {",
      "emits(\"update:visible\", false);",
      "};",
      "</script>"
    ],
    "description": "详情弹窗"
  }
}
